"use strict";

var _enzyme = _interopRequireDefault(require("enzyme"));

var _enzymeAdapterReact = _interopRequireDefault(require("enzyme-adapter-react-16"));

var _chai = require("chai");

var _jsdom = _interopRequireDefault(require("jsdom"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var consoleEr = '';
var consoleWa = '';

function setUpDomEnvironment() {
  var JSDOM = _jsdom["default"].JSDOM;
  var dom = new JSDOM('<!doctype html><html><body></body></html>', {
    url: 'http://localhost/'
  });
  var window = dom.window;
  global.window = window;
  global.document = window.document;
  global.navigator = {
    userAgent: 'node.js'
  };

  global.console.error = function (e) {
    return consoleEr += e;
  };

  global.console.warn = function (e) {
    return consoleWa += e;
  };

  global.console.warning = function (e) {
    return consoleWa += e;
  };

  copyProps(window, global);
}

function copyProps(src, target) {
  var props = Object.getOwnPropertyNames(src).filter(function (prop) {
    return typeof target[prop] === 'undefined';
  }).map(function (prop) {
    return Object.getOwnPropertyDescriptor(src, prop);
  });
  Object.defineProperties(target, props);
}

beforeEach(function () {
  consoleEr = '';
  consoleWa = '';
});
afterEach(function () {
  (0, _chai.expect)(consoleEr).to.equal('');
  (0, _chai.expect)(consoleWa).to.equal('');
});
setUpDomEnvironment();

_enzyme["default"].configure({
  adapter: new _enzymeAdapterReact["default"]()
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9zZXR1cFRlc3RzLmpzIl0sIm5hbWVzIjpbImNvbnNvbGVFciIsImNvbnNvbGVXYSIsInNldFVwRG9tRW52aXJvbm1lbnQiLCJKU0RPTSIsImpzZG9tIiwiZG9tIiwidXJsIiwid2luZG93IiwiZ2xvYmFsIiwiZG9jdW1lbnQiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJjb25zb2xlIiwiZXJyb3IiLCJlIiwid2FybiIsIndhcm5pbmciLCJjb3B5UHJvcHMiLCJzcmMiLCJ0YXJnZXQiLCJwcm9wcyIsIk9iamVjdCIsImdldE93blByb3BlcnR5TmFtZXMiLCJmaWx0ZXIiLCJwcm9wIiwibWFwIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZGVmaW5lUHJvcGVydGllcyIsImJlZm9yZUVhY2giLCJhZnRlckVhY2giLCJ0byIsImVxdWFsIiwiRW56eW1lIiwiY29uZmlndXJlIiwiYWRhcHRlciIsIkFkYXB0ZXIiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBRUE7Ozs7QUFFQSxJQUFJQSxTQUFTLEdBQUcsRUFBaEI7QUFDQSxJQUFJQyxTQUFTLEdBQUcsRUFBaEI7O0FBRUEsU0FBU0MsbUJBQVQsR0FBK0I7QUFBQSxNQUN0QkMsS0FEc0IsR0FDYkMsaUJBRGEsQ0FDdEJELEtBRHNCO0FBRTdCLE1BQU1FLEdBQUcsR0FBRyxJQUFJRixLQUFKLENBQVUsMkNBQVYsRUFBdUQ7QUFBQ0csSUFBQUEsR0FBRyxFQUFFO0FBQU4sR0FBdkQsQ0FBWjtBQUY2QixNQUd0QkMsTUFIc0IsR0FHWkYsR0FIWSxDQUd0QkUsTUFIc0I7QUFLN0JDLEVBQUFBLE1BQU0sQ0FBQ0QsTUFBUCxHQUFnQkEsTUFBaEI7QUFDQUMsRUFBQUEsTUFBTSxDQUFDQyxRQUFQLEdBQWtCRixNQUFNLENBQUNFLFFBQXpCO0FBQ0FELEVBQUFBLE1BQU0sQ0FBQ0UsU0FBUCxHQUFtQjtBQUNqQkMsSUFBQUEsU0FBUyxFQUFFO0FBRE0sR0FBbkI7O0FBR0FILEVBQUFBLE1BQU0sQ0FBQ0ksT0FBUCxDQUFlQyxLQUFmLEdBQXVCLFVBQUFDLENBQUM7QUFBQSxXQUFLZCxTQUFTLElBQUljLENBQWxCO0FBQUEsR0FBeEI7O0FBQ0FOLEVBQUFBLE1BQU0sQ0FBQ0ksT0FBUCxDQUFlRyxJQUFmLEdBQXNCLFVBQUFELENBQUM7QUFBQSxXQUFLYixTQUFTLElBQUlhLENBQWxCO0FBQUEsR0FBdkI7O0FBQ0FOLEVBQUFBLE1BQU0sQ0FBQ0ksT0FBUCxDQUFlSSxPQUFmLEdBQXlCLFVBQUFGLENBQUM7QUFBQSxXQUFLYixTQUFTLElBQUlhLENBQWxCO0FBQUEsR0FBMUI7O0FBQ0FHLEVBQUFBLFNBQVMsQ0FBQ1YsTUFBRCxFQUFTQyxNQUFULENBQVQ7QUFDRDs7QUFFRCxTQUFTUyxTQUFULENBQW1CQyxHQUFuQixFQUF3QkMsTUFBeEIsRUFBZ0M7QUFDOUIsTUFBTUMsS0FBSyxHQUFHQyxNQUFNLENBQUNDLG1CQUFQLENBQTJCSixHQUEzQixFQUNYSyxNQURXLENBQ0osVUFBQUMsSUFBSTtBQUFBLFdBQUksT0FBT0wsTUFBTSxDQUFDSyxJQUFELENBQWIsS0FBd0IsV0FBNUI7QUFBQSxHQURBLEVBRVhDLEdBRlcsQ0FFUCxVQUFBRCxJQUFJO0FBQUEsV0FBSUgsTUFBTSxDQUFDSyx3QkFBUCxDQUFnQ1IsR0FBaEMsRUFBcUNNLElBQXJDLENBQUo7QUFBQSxHQUZHLENBQWQ7QUFHQUgsRUFBQUEsTUFBTSxDQUFDTSxnQkFBUCxDQUF3QlIsTUFBeEIsRUFBZ0NDLEtBQWhDO0FBQ0Q7O0FBRURRLFVBQVUsQ0FBQyxZQUFXO0FBQ3BCNUIsRUFBQUEsU0FBUyxHQUFHLEVBQVo7QUFDQUMsRUFBQUEsU0FBUyxHQUFHLEVBQVo7QUFDRCxDQUhTLENBQVY7QUFJQTRCLFNBQVMsQ0FBQyxZQUFXO0FBQ25CLG9CQUFPN0IsU0FBUCxFQUFrQjhCLEVBQWxCLENBQXFCQyxLQUFyQixDQUEyQixFQUEzQjtBQUNBLG9CQUFPOUIsU0FBUCxFQUFrQjZCLEVBQWxCLENBQXFCQyxLQUFyQixDQUEyQixFQUEzQjtBQUNELENBSFEsQ0FBVDtBQUlBN0IsbUJBQW1COztBQUNuQjhCLG1CQUFPQyxTQUFQLENBQWlCO0FBQUNDLEVBQUFBLE9BQU8sRUFBRSxJQUFJQyw4QkFBSjtBQUFWLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEVuenltZSBmcm9tICdlbnp5bWUnO1xyXG5pbXBvcnQgQWRhcHRlciBmcm9tICdlbnp5bWUtYWRhcHRlci1yZWFjdC0xNic7XHJcbmltcG9ydCB7ZXhwZWN0fSBmcm9tICdjaGFpJztcclxuXHJcbmltcG9ydCBqc2RvbSBmcm9tICdqc2RvbSc7XHJcblxyXG5sZXQgY29uc29sZUVyID0gJyc7XHJcbmxldCBjb25zb2xlV2EgPSAnJztcclxuXHJcbmZ1bmN0aW9uIHNldFVwRG9tRW52aXJvbm1lbnQoKSB7XHJcbiAgY29uc3Qge0pTRE9NfSA9IGpzZG9tO1xyXG4gIGNvbnN0IGRvbSA9IG5ldyBKU0RPTSgnPCFkb2N0eXBlIGh0bWw+PGh0bWw+PGJvZHk+PC9ib2R5PjwvaHRtbD4nLCB7dXJsOiAnaHR0cDovL2xvY2FsaG9zdC8nfSk7XHJcbiAgY29uc3Qge3dpbmRvd30gPSBkb207XHJcblxyXG4gIGdsb2JhbC53aW5kb3cgPSB3aW5kb3c7XHJcbiAgZ2xvYmFsLmRvY3VtZW50ID0gd2luZG93LmRvY3VtZW50O1xyXG4gIGdsb2JhbC5uYXZpZ2F0b3IgPSB7XHJcbiAgICB1c2VyQWdlbnQ6ICdub2RlLmpzJ1xyXG4gIH07XHJcbiAgZ2xvYmFsLmNvbnNvbGUuZXJyb3IgPSBlID0+IChjb25zb2xlRXIgKz0gZSk7XHJcbiAgZ2xvYmFsLmNvbnNvbGUud2FybiA9IGUgPT4gKGNvbnNvbGVXYSArPSBlKTtcclxuICBnbG9iYWwuY29uc29sZS53YXJuaW5nID0gZSA9PiAoY29uc29sZVdhICs9IGUpO1xyXG4gIGNvcHlQcm9wcyh3aW5kb3csIGdsb2JhbCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNvcHlQcm9wcyhzcmMsIHRhcmdldCkge1xyXG4gIGNvbnN0IHByb3BzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoc3JjKVxyXG4gICAgLmZpbHRlcihwcm9wID0+IHR5cGVvZiB0YXJnZXRbcHJvcF0gPT09ICd1bmRlZmluZWQnKVxyXG4gICAgLm1hcChwcm9wID0+IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc3JjLCBwcm9wKSk7XHJcbiAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcyk7XHJcbn1cclxuXHJcbmJlZm9yZUVhY2goZnVuY3Rpb24oKSB7XHJcbiAgY29uc29sZUVyID0gJyc7XHJcbiAgY29uc29sZVdhID0gJyc7XHJcbn0pO1xyXG5hZnRlckVhY2goZnVuY3Rpb24oKSB7XHJcbiAgZXhwZWN0KGNvbnNvbGVFcikudG8uZXF1YWwoJycpO1xyXG4gIGV4cGVjdChjb25zb2xlV2EpLnRvLmVxdWFsKCcnKTtcclxufSk7XHJcbnNldFVwRG9tRW52aXJvbm1lbnQoKTtcclxuRW56eW1lLmNvbmZpZ3VyZSh7YWRhcHRlcjogbmV3IEFkYXB0ZXIoKX0pO1xyXG4iXX0=